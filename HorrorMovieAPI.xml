<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HorrorMovieAPI</name>
    </assembly>
    <members>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.GetAllActors(System.Nullable{System.Int32},System.Int32,System.String,System.String[])">
            <summary>
            Get all actors from the database.
            </summary>
            <param name="page">Page refers to which pagenumber will be displayed.</param>
            <param name="pagesize">Pagesize refers to objects per page.</param>
            <param name="firstName">Filter actors by firstname.</param>
            <param name="including">Dynamic inclusions which determine what foreign entities should be included in results.</param>
            <returns>A list of Actors that may or may not have been filtered by the user.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.GetActorById(System.Int32,System.String[])">
            <summary>
            Get an actor by its Id.
            </summary>
            <param name="id">Actor primary key Id which needs to be valid.</param>
            <param name="including">Properties which will be included.</param>
            <returns>An Actor object which matched given Id.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.CreateActor(HorrorMovieAPI.Models.ActorDTO)">
            <summary>
            Create an actor by using its Id and ActorForUpdateDTO containing its data.
            </summary>
            <param name="actorDTO">DTO of an Actor object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 201 (Created) if the Actor was successfully created.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.UpdateActorDetails(System.Int32,HorrorMovieAPI.Dto.ActorForUpdateDTO)">
            <summary>
            Update an actor by using its Id and ActorForUpdateDTO containing its updated data.
            </summary>
            <param name="id">Actor primary key Id which needs to be valid.</param>
            <param name="actorForUpdateDto">DTO of an Actor object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 204 (NoContent) if the Actor was successfully updated.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.ActorsController.DeleteActorById(System.Int32)">
            <summary>
            Delete an actor by using its Id.
            </summary>
            <param name="id">Actor primary key Id which needs to be valid.</param>
            <returns>Returns status code 204 (NoContent) if the Actor was successfully deleted.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.GetAllDirectors(System.Nullable{System.Int32},System.Int32,System.String,System.String[])">
            <summary>
            Get all directors from the database.
            </summary>
            <param name="page">Page refers to which pagenumber will be displayed.</param>
            <param name="pagesize">Pagesize refers to objects per page.</param>
            <param name="birthCountry">Filter directors by birthcountry</param>
            <param name="including"></param>
            <returns>A list of Directors that may or may not have been filtered by the user.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.GetDirectorById(System.Int32,System.String[])">
            <summary>
            Get a director by its Id.
            </summary>
            <param name="id">Director primary key Id which needs to be valid.</param>
            <param name="including">Properties which will be included.</param>
            <returns>A Director object which matched given Id.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.CreateDirector(HorrorMovieAPI.Dto.DirectorForUpdateDTO)">
            <summary>
            Create a director by using its Id and DirectorForUpdateDTO containing its data.
            </summary>
            <param name="directorDto">DTO of a Director object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 201 (Created) if the Movie was successfully created.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.UpdateDirectorDetails(System.Int32,HorrorMovieAPI.Dto.DirectorForUpdateDTO)">
            <summary>
            Update a director by using its Id and DirectorForUpdateDTO containing its updated data.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <param name="directorForUpdateDto">DTO of a Director object which contains updated data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 204 (NoContent) if the Movie was successfully updated.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.DirectorsController.DeleteDirectorById(System.Int32)">
            <summary>
            Delete a movie by using its Id.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <returns>Returns status code 204 (NoContent) if the Director was successfully deleted.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.GetAll(System.Nullable{System.Int32},System.Int32,System.String,System.String[])">
            <summary>
            Gets all genres from the database.
            </summary>
            <param name="page">Page refers to which pagenumber will be displayed.</param>
            <param name="pagesize">Pagesize refers to objects per page.</param>
            <param name="genre">Filter genres by genrename.</param>
            <param name="including">Dynamic inclusions which determine what foreign entities should be included in results.</param>
            <returns>A list of Actors that may or may not have been filtered by the user.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.GetGenreById(System.Int32,System.String[])">
            <summary>
            Get a genre by its Id.
            </summary>
            <param name="id">Genre primary key Id which needs to be valid.</param>
            <param name="including">Properties which will be included.</param>
            <returns>A Genre object which matched given Id.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.CreateGenre(HorrorMovieAPI.Models.GenreDTO)">
            <summary>
            Create a genre by using its Id and GenreForUpdateDTO containing its data.
            </summary>
            <param name="genreDTO">DTO of a Genre object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 201 (Created) if the Genre was successfully created.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.UpdateGenreDetails(System.Int32,HorrorMovieAPI.Models.GenreForUpdateDTO)">
            <summary>
            Update a genre by using its Id and GenreForUpdateDTO containing its updated data.
            </summary>
            <param name="id">Genre primary key Id which needs to be valid.</param>
            <param name="genreForUpdateDto">DTO of an Genre object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 204 (NoContent) if the Genre was successfully updated.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.GenresController.DeleteGenreById(System.Int32)">
            <summary>
            Delete a genre by using its Id.
            </summary>
            <param name="id">Genre primary key Id which needs to be valid.</param>
            <returns>Returns status code 204 (NoContent) if the Genre was successfully deleted.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.GetAllMovies(System.Nullable{System.Int32},System.Int32,System.String,System.Int32,System.Int32,System.String[])">
            <summary>
            Gets all movies from the database.
            </summary>
            <param name="page">Page refers to which pagenumber will be displayed.</param>
            <param name="pagesize">Pagesize refers to objects per page.</param>
            <param name="movieTitle">Filter by Movies by title.</param>
            <param name="exactYear">Filter Movies by exact release year.</param>
            <param name="afterYear">Filter Movies which were created after this year.</param>
            <param name="including">Dynamic inclusions which determine what foreign entities should be included in results.</param>
            <returns>A list of Movies that may or may not have been filtered by the user.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.GetMovieById(System.Int32,System.String[])">
            <summary>
            Get a movie by its Id.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <param name="including">Properties which will be included.</param>
            <returns>A Movie object which matched given Id.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.CreateMovie(HorrorMovieAPI.Dto.MovieForUpdateDTO)">
            <summary>
            Create a movie by using its Id and MovieForUpdateDTO containing its data.
            </summary>
            <param name="movieToCreateDTO">DTO of a Movie object which contains its data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 201 (Created) if the Movie was successfully created.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.UpdateMovieDetails(System.Int32,HorrorMovieAPI.Dto.MovieForUpdateDTO)">
            <summary>
            Update a movie by using its Id and MovieForUpdateDTO containing its updated data.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <param name="movieDTO">DTO of a Movie object which contains updated data (refer to schema-documentation for more information).</param>
            <returns>Returns status code 204 (NoContent) if the Movie was successfully updated.</returns>
        </member>
        <member name="M:HorrorMovieAPI.Controllers.MoviesController.DeleteMovieById(System.Int32)">
            <summary>
            Delete a movie by using its Id.
            </summary>
            <param name="id">Movie primary key Id which needs to be valid.</param>
            <returns>Returns status code 204 (NoContent) if the Movie was successfully deleted.</returns>
        </member>
        <member name="T:HorrorMovieAPI.Models.ActorDTO">
            <summary>
            Represents the data transfer object of an Actor which will be used during GET-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.Id">
            <summary>
            Primary key of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.FirstName">
            <summary>
            First name of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.LastName">
            <summary>
            Last name of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.DOB">
            <summary>
            Date of birth of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.BirthTown">
            <summary>
            The town where the actor was born.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.BirthCountry">
            <summary>
            The country where the actor was born.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.ActorDTO.Castings">
            <summary>
            The list of movie(s) the actor starrs in.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Models.CastingDTO">
            <summary>
            Represents the data transfer object of the Casted actor which will be used during GET-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.CastingDTO.Id">
            <summary>
            Primary key of the casting.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.CastingDTO.Character">
            <summary>
            Represents the specific character the actor plays in the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.CastingDTO.Movie">
            <summary>
            The movie which the character starrs in.  
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.CastingDTO.Actor">
            <summary>
            The actor who plays the character.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Models.DirectorDTO">
            <summary>
            Represents the data transfer object of a Director which will be used during GET-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.Id">
            <summary>
            Primary key of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.FirstName">
            <summary>
            First name of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.LastName">
            <summary>
            Last name of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.DOB">
            <summary>
            Date of birth of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.BirthTown">
            <summary>
            The town where the actor was born.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.BirthCountry">
            <summary>
            The country where the actor was born.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.DirectorDTO.Movies">
            <summary>
            Directed movies.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Models.GenreDTO">
            <summary>
            Represents the data transfer object of a Genre which will be used during GET-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.GenreDTO.Id">
            <summary>
            Primary key of the genre.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.GenreDTO.Name">
            <summary>
            The name of the genre.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.GenreDTO.Movies">
            <summary>
            A list of movies with the specific genre.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Models.GenreForUpdateDTO">
            <summary>
            Represents the data transfer object of a Genre which will be used during POST/PUT-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.GenreForUpdateDTO.Name">
            <summary>
            The name of the genre.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Models.MovieDTO">
            <summary>
            Represents the data transfer object of a Movie which will be used during GET-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Id">
            <summary>
            Primary key of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Genre">
            <summary>
            Genre of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Title">
            <summary>
            Title of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Length">
            <summary>
            The length of the movie in minutes.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Year">
            <summary>
            The year which the movie was released.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Rating">
            <summary>
            The curent rating of the movie .
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Country">
            <summary>
            The country the movie origine from.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Language">
            <summary>
            The original Language of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.BudgetInUsd">
            <summary>
            The budget for the movie in Us dollars.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Director">
            <summary>
            The person who directed this movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Models.MovieDTO.Castings">
            <summary>
            The list of people who acted in the movie.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Dto.ActorForUpdateDTO">
            <summary>
            Represents the data transfer object of an Actor which will be used during POST/PUT-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.ActorForUpdateDTO.FirstName">
            <summary>
            Firstname of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.ActorForUpdateDTO.LastName">
            <summary>
            Lastname of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.ActorForUpdateDTO.DOB">
            <summary>
            Date of birth of the actor.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.ActorForUpdateDTO.BirthTown">
            <summary>
            The town where the actor was born.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.ActorForUpdateDTO.BirthCountry">
            <summary>
            The country where the actor was born.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Dto.DirectorForUpdateDTO">
            <summary>
            Represents the data transfer object of a Movie which will be used during POST/PUT-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.DirectorForUpdateDTO.FirstName">
            <summary>
            First name of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.DirectorForUpdateDTO.LastName">
            <summary>
            Last name of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.DirectorForUpdateDTO.DOB">
            <summary>
            Date of birth of the Director.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.DirectorForUpdateDTO.BirthTown">
            <summary>
            The town where the actor was born.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.DirectorForUpdateDTO.BirthCountry">
            <summary>
            The country where the actor was born.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Dto.LinkDto">
            <summary>
            Refers to the HATEOAS.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.LinkDto.Href">
            <summary>
            The link.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.LinkDto.Rel">
            <summary>
            Explains the relationship between the link and the object.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.LinkDto.Method">
            <summary>
            Refers to the specific CRUD-method.
            </summary>
        </member>
        <member name="T:HorrorMovieAPI.Dto.MovieForUpdateDTO">
            <summary>
            Represents the data transfer object of a Movie which will be used during POST/PUT-requests.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Title">
            <summary>
            Title of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.DirectorID">
            <summary>
            Foreign key of the director which directed this movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.GenreID">
            <summary>
            Foreign key of the genre.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Length">
            <summary>
            The length of the movie in minutes.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Year">
            <summary>
            The year which the movie was released.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Rating">
            <summary>
            The curent rating of the movie .
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Country">
            <summary>
            The country the movie origine from.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.Language">
            <summary>
            The original Language of the movie.
            </summary>
        </member>
        <member name="P:HorrorMovieAPI.Dto.MovieForUpdateDTO.BudgetInUsd">
            <summary>
            The budget for the movie in Us dollars.
            </summary>
        </member>
    </members>
</doc>
